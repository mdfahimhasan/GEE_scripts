/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var LANID = ee.Image("projects/ee-fahim/assets/LANID_for_selected_states/selected_Annual_LANID"),
    aim_hpa = ee.Image("projects/ee-fahim/assets/AIM-HPA/AIM_HPA_Annual"),
    ROI = 
    /* color: #d63000 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[-101.71873990036002, 39.46645563875555],
          [-101.71873990036002, 38.87878091742302],
          [-100.62010708786002, 38.87878091742302],
          [-100.62010708786002, 39.46645563875555]]], null, false);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var year = 2016;
//  USDA CDL dataset
var cdl_dataset = ee.ImageCollection('USDA/NASS/CDL')
                  .filter(ee.Filter.calendarRange(year,year,'year'))
                  .first();
var cdl = cdl_dataset.select('cropland');

// Filtering Fallow land
var fallow = cdl.eq(61);
var fallow = fallow.updateMask(fallow);

// Filtering pasture
var pasture = cdl.eq(176);
var pasture = pasture.updateMask(pasture);

// LANID Image for 2016
var irr_lanid = LANID.select('lanid_2016');
var irr_lanid = irr_lanid.eq(1).unmask(); // unmask() assigns zero value to no data pixels


// AIM-HPA data 2006
var irr_aim_hpa = aim_hpa.select('aim_2016');
var irr_aim_hpa = irr_aim_hpa.eq(1).unmask();

// Joining LANID and AIM-HPA
// The equal operation (with 0) sets non-irrigated locations to 1 and irrigated to 0
// Remapping the irrigated 0 values to 1 and then applying a mask
var irr_total = irr_lanid.add(irr_aim_hpa);
var irr_total = irr_total.eq(0).remap([0], [1]).unmask();
var irrig_mask = irr_total.eq(1);
var irrigated = irr_total.updateMask(irrig_mask);

// In IrrMapper dataset irrigated fields are assigned as 0
// Converting the irrigated values to 1 and setting others as null
var no_irrig_mask = irr_total.eq(0);

            
// Masking out fallow lands that are irrigated
var fallow_masked = fallow.updateMask(no_irrig_mask);

// Sampling random point over fallow land
var fallow_pts = fallow_masked.stratifiedSample({
  numPoints: 5000,
  region: ROI,
  seed: 0,
  classValues: [1],
  classPoints: [5000],
  dropNulls: true,
  geometries: true
});


// Laoding OpenET
var openET_imcol = ee.ImageCollection("OpenET/ENSEMBLE/CONUS/GRIDMET/MONTHLY/v2_0");

var openET_img = openET_imcol.select('et_ensemble_mad').
                    filterDate('2016-06-01', '2016-07-01').
                    sum().multiply(1).toFloat();

// Extract OpenET values at fallow points    
var pts_ET = openET_img.reduceRegions({
  collection: fallow_pts,
  reducer: ee.Reducer.mean()
});
print(pts_ET);                  

Map.addLayer(pasture, {min:0, max:1, palette: ['pink']}, 'Pasture', false);
Map.addLayer(fallow, {min:0, max:1, palette: ['yellow']}, 'Fallow Land Original', false);
Map.addLayer(fallow_masked, {min:0, max:1, palette: ['blue']}, 'Fallow Land masked with Irrigated');
Map.addLayer(irrigated, {min:0, max:1, palette: ['green']}, 'Irrigated', false);
Map.addLayer(pts_ET, {color: 'red'}, 'Pts with natural ET');
