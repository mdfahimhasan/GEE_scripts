/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var LANID = ee.Image("projects/ee-fahim/assets/LANID_for_selected_states/selected_Annual_LANID"),
    HPA = 
    /* color: #d63000 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[-98.17322909719775, 34.8861475721054],
          [-98.17322909719775, 34.54297991937097],
          [-97.51404940969775, 34.54297991937097],
          [-97.51404940969775, 34.8861475721054]]], null, false),
    aim_hpa = ee.Image("projects/ee-fahim/assets/AIM-HPA/AIM_HPA_Annual");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// LANID Image for 2016
var irr_lanid = LANID.select('lanid_2016');
var irr_lanid = irr_lanid.eq(1).unmask(); // unmask() assigns zero value to no data pixels

var projection_lanid = irr_lanid.projection();
var projection2km_scale = projection_lanid.atScale(2200); // from LANID
// print(projection_lanid);

// AIM-HPA data 2006
var irr_aim_hpa = aim_hpa.select('aim_2016');
var irr_aim_hpa = irr_aim_hpa.eq(1).unmask();

// Joining LANID and AIM-HPA
// The equal operation (with 0) sets non-irrigated locations to 1 and irrigated to 0
// Remapping the irrigated 0 values to 1 and then applying a mask
var irr_total = irr_lanid.add(irr_aim_hpa);
var irr_total = irr_total.eq(0).remap([0], [1]).unmask();


//  USDA CDL dataset
var year = 2016;
var cdl_dataset = ee.ImageCollection('USDA/NASS/CDL')
                  .filter(ee.Filter.calendarRange(year, year, 'year'))
                  .first();
var cdl = cdl_dataset.select('cropland');

// List of non-crop pixels
var noncrop_list = ee.List([0, 60,61, 63,64,65,81, 82,83, 87, 88, 111, 112, 121, 122, 123,
                            124, 131, 141, 142, 143, 152, 190, 195]);  // 0 is no data value

// Filtering out non-crop pixels
var cdl_cropland = cdl.remap({
  from: noncrop_list,
  to: ee.List.repeat(0, noncrop_list.size()),
  defaultValue: 1
});


// Extracting rainfed (non-irrigated) croplands
// Converting 0 values (non-irrigated) to 1 then multiplying with
// CDL cropland data (reclassified to 1 for croplands and 0 for non-croplands). 
// The ramaining pixels will be rainfed croplands. Masking it again to remove the 0 values
var irr_total_reversed = irr_total.remap([0, 1], [1, 0]);
var rainfed_cropland_for_LANID = cdl_cropland.multiply(irr_total_reversed);
var mask = rainfed_cropland_for_LANID.eq(1);
var rainfed_cropland_for_LANID = rainfed_cropland_for_LANID
                                          .updateMask(mask)
                                          .setDefaultProjection({crs: projection_lanid});

// Open ET Imagecollection
var openET_imcol = ee.ImageCollection("OpenET/ENSEMBLE/CONUS/GRIDMET/MONTHLY/v2_0");
var projection_openET = ee.Image(openET_imcol.first()).projection();


var openET_img = openET_imcol.select('et_ensemble_mad').
                    filterDate('2020-06-01', '2020-07-01').
                    sum().multiply(1).toFloat().
                    setDefaultProjection({crs: projection_openET});

// Multiplying OpenET with Irrmap irrigated data. This will set non-irrigated pixels' ET value to zero
var cropET_from_openET = openET_img.multiply(rainfed_cropland_for_LANID).clip(HPA);                    
// Map.addLayer(cropET_from_openET)

// Summing crop ET from 30m to 2km scale
var cropET_from_openET = cropET_from_openET.reduceResolution(
                          {reducer:ee.Reducer.mean(), 
                            maxPixels: 60000}).
                            reproject({
                            crs:projection2km_scale});

// Mapping
var vis1 = {min:0, max:1, palette: ['yellow', 'blue']};
var vis2 = {min: 0, max: 1400,  palette: ['9e6212', 'ac7d1d', 'ba9829', 'c8b434', 'd6cf40', 'bed44b', '9fcb51',
                                          '80c256', '61b95c', '42b062', '45b677', '49bc8d', '4dc2a2', '51c8b8',
                                          '55cece', '4db4ba', '459aa7', '3d8094', '356681', '2d4c6e']};

// Map.setCenter(-100.55, 40.71, 4);
Map.addLayer(cdl, {}, 'Crop Landcover', false);
Map.addLayer(cropET_from_openET, vis2, 'CropET on Rainfed Fields at 2km pixel');
Map.addLayer(rainfed_cropland_for_LANID, vis1, 'Rainfed cropland LANID Extent');